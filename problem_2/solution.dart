/**
 * Even Fibonacci numbers
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequene whose values do not exceed four million, find the sum of the even-valued terms
 * 
 * @author seanmr
 */

main() {
  print(genFibSequence(4000000));
}

// Generates fibonacci sequence up to ceiling
int genFibSequence(int ceiling) {
  int previous = 1;
  int current =2;
  List<int> fib = new List.from([1]);

  // Check that current value in sequence doesn't exceed ceiling
  while (current <= ceiling) {
    fib.add(current);

    // Update values
    int tmp = current;

    current = previous + current;
    previous = tmp;
  }

  // Return sum of even values in sequence
  return genEvenFibSum(fib);
}

// Generates sum of even elements in fibonacci sequence
int genEvenFibSum(List<int> fib_sequence) {
  fib_sequence.removeWhere((element) => element % 2 != 0);

  return fib_sequence.fold(0, (previous, current) => previous + current);
}