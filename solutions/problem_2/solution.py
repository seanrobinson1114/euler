# Even Fibonacci Numbers 
# Each new term in the Fibonacci sequence is generated by adding the previous two terms
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... 
# By considering the terms in the Fibonacci sequene whose values do not exceed four million, find the sum of the even-valued terms 
# @author seanmr
#

ceiling = 4000000
total = 0

# Calculates the sum of even fibonacci sequence values up to ceiling
def calcEvenFibTermsSum(current_value, previous_value):
    # specify total to be global so value can be changed
    global total

    # Generate the next term
    next_value = current_value + previous_value

    # Add next value to total and continue through sequence if ceiling not exceeded
    if next_value > ceiling:
        return total

    elif next_value % 2 == 0:
        total += next_value
    
    return calcEvenFibTermsSum(next_value, current_value)

print(calcEvenFibTermsSum(1, 0))